{
  "contractName": "Event",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_base",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610196833981016040525160018054600160a060020a0319908116331790915560008054600160a060020a03909316929091169190911790556101378061005f6000396000f30060806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635001f3b581146100805780638da5cb5b146100be575b34801561005757600080fd5b506000543660008037600080366000845af43d806000803e81801561007b57816000f35b600080fd5b34801561008c57600080fd5b506100956100d3565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100ca57600080fd5b506100956100ef565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820ef4398c8003c2448f2a0452064d130554d091db04da3e2f5312fb64ec87c09f90029",
  "deployedBytecode": "0x60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635001f3b581146100805780638da5cb5b146100be575b34801561005757600080fd5b506000543660008037600080366000845af43d806000803e81801561007b57816000f35b600080fd5b34801561008c57600080fd5b506100956100d3565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100ca57600080fd5b506100956100ef565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820ef4398c8003c2448f2a0452064d130554d091db04da3e2f5312fb64ec87c09f90029",
  "sourceMap": "52:579:0:-;;;127:102;8:9:-1;5:2;;;30:1;27;20:12;5:2;127:102:0;;;;;;;;;;;;;171:5;:18;;-1:-1:-1;;;;;;171:18:0;;;179:10;171:18;;;;:5;199:23;;-1:-1:-1;;;;;199:23:0;;;;;;;;;;;;;52:579;;;;;;",
  "deployedSourceMap": "52:579:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:579:0;307:1;301:8;345:12;340:3;335;322:36;436:1;431:3;417:12;412:3;403:7;398:3;385:53;469:14;521:10;516:3;511;496:36;552:6;559:21;;;;601:10;598:1;590:22;559:21;577:1;574;567:12;73:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:21:0;;;;;;;;;;;;;;;;;;;;;;;100:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:20:0;;;;73:21;;;;;;:::o;100:20::-;;;;;;:::o",
  "source": "pragma solidity ^0.4.2;\n\nimport \"./EventBase.sol\";\n\ncontract Event {\n    EventBase public base;\n    address public owner;\n\n    constructor(address _base) public {\n        owner = msg.sender;\n        base = EventBase(_base);\n    }\n\n    function() public {\n        assembly {\n            let _target := sload(0)\n            calldatacopy(0x0, 0x0, calldatasize)\n            let retval := delegatecall(gas, _target, 0x0, calldatasize, 0x0, 0)\n            let returnsize := returndatasize\n            returndatacopy(0x0, 0x0, returnsize)\n            switch retval case 0 {revert(0, 0)} default {return (0, returnsize)}\n        }\n    }\n}\n",
  "sourcePath": "/Users/nickolay/workspace/rsk/app/contracts/Event.sol",
  "ast": {
    "absolutePath": "/Users/nickolay/workspace/rsk/app/contracts/Event.sol",
    "exportedSymbols": {
      "Event": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/nickolay/workspace/rsk/app/contracts/EventBase.sol",
        "file": "./EventBase.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 1443,
        "src": "25:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29
        ],
        "name": "Event",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "base",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "73:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EventBase_$1442",
              "typeString": "contract EventBase"
            },
            "typeName": {
              "contractScope": null,
              "id": 3,
              "name": "EventBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1442,
              "src": "73:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventBase_$1442",
                "typeString": "contract EventBase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "100:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "100:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "161:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "171:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12738,
                        "src": "179:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "179:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "171:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "171:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "199:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EventBase_$1442",
                        "typeString": "contract EventBase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "_base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "216:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 17,
                        "name": "EventBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "206:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventBase_$1442_$",
                          "typeString": "type(contract EventBase)"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "206:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EventBase_$1442",
                        "typeString": "contract EventBase"
                      }
                    },
                    "src": "199:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EventBase_$1442",
                      "typeString": "contract EventBase"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "199:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_base",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "139:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "138:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:0"
            },
            "scope": 29,
            "src": "127:102:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "253:376:0",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 26,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let _target := sload(0)\n    calldatacopy(0x0, 0x0, calldatasize())\n    let retval := delegatecall(gas(), _target, 0x0, calldatasize(), 0x0, 0)\n    let returnsize := returndatasize()\n    returndatacopy(0x0, 0x0, returnsize)\n    switch retval\n    case 0 {\n        revert(0, 0)\n    }\n    default {\n        return(0, returnsize)\n    }\n}",
                  "src": "263:366:0"
                }
              ]
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:0:0"
            },
            "scope": 29,
            "src": "235:394:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "52:579:0"
      }
    ],
    "src": "0:632:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/nickolay/workspace/rsk/app/contracts/Event.sol",
    "exportedSymbols": {
      "Event": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/nickolay/workspace/rsk/app/contracts/EventBase.sol",
        "file": "./EventBase.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 1443,
        "src": "25:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29
        ],
        "name": "Event",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "base",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "73:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EventBase_$1442",
              "typeString": "contract EventBase"
            },
            "typeName": {
              "contractScope": null,
              "id": 3,
              "name": "EventBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1442,
              "src": "73:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventBase_$1442",
                "typeString": "contract EventBase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "100:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "100:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "161:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "171:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12738,
                        "src": "179:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "179:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "171:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "171:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "199:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EventBase_$1442",
                        "typeString": "contract EventBase"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "_base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "216:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 17,
                        "name": "EventBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "206:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventBase_$1442_$",
                          "typeString": "type(contract EventBase)"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "206:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EventBase_$1442",
                        "typeString": "contract EventBase"
                      }
                    },
                    "src": "199:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EventBase_$1442",
                      "typeString": "contract EventBase"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "199:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "_base",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "139:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "138:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:0"
            },
            "scope": 29,
            "src": "127:102:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "253:376:0",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 26,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let _target := sload(0)\n    calldatacopy(0x0, 0x0, calldatasize())\n    let retval := delegatecall(gas(), _target, 0x0, calldatasize(), 0x0, 0)\n    let returnsize := returndatasize()\n    returndatacopy(0x0, 0x0, returnsize)\n    switch retval\n    case 0 {\n        revert(0, 0)\n    }\n    default {\n        return(0, returnsize)\n    }\n}",
                  "src": "263:366:0"
                }
              ]
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:0:0"
            },
            "scope": 29,
            "src": "235:394:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "52:579:0"
      }
    ],
    "src": "0:632:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T11:29:04.024Z"
}